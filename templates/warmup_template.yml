AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'

Description: >
  Pipeline for warmup

Parameters:
  GitHubOAuthToken:
    Description: OAuth token used by AWS CodePipeline to connect to GitHub
    NoEcho: true
    Type: String
    Default: '{{resolve:secretsmanager:githubtoken:SecretString}}'
  GitHubOwner:
    Description: GitHub username owning the repo
    Type: String
    Default: BIBSYSDEV
  GitHubRepo:
    Description: GitHub repo name
    Type: String
    Default: NVA-stress-test
  GitHubBranch:
    Description: GitHub repo branch name. It defaults to main if not specified.
    Type: String
    Default: main
Resources:
  CodeBuildWarmupProject:
    Type: AWS::CodeBuild::Project
    Properties:
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_LARGE
        Image: aws/codebuild/standard:5.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: S3_BUCKET
            Type: PLAINTEXT
            Value: !Ref ArtifactStoreBucket
          - Name: ROLE_ARN
            Type: PLAINTEXT
            Value: !GetAtt TestrunnerRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: template/buildspec.yml
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Type: S3
        Location:
          Ref: ArtifactStoreBucket
      RoleArn: !GetAtt PipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: GitHubSource
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: '1'
              Configuration:
                Owner: !Ref GitHubOwner
                OAuthToken: !Ref GitHubOAuthToken
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                PollForSourceChanges: true
              OutputArtifacts:
                - Name: SourceArtifact
              RunOrder: 1
        - Name: Warmup
          Actions:
            - Name: Warmup
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !GetAtt CodeBuildWarmupProject.Arn
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: TestDataArtifact
              RunOrder: 1

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: ['sts:AssumeRole']
            Effect: Allow
            Principal:
              Service: [codepipeline.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - 's3:ListBucket'
                  - 's3:GetBucketVersioning'
                  - 's3:PutObject'
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                Effect: Allow
                Resource:
                  - !Sub ${ArtifactStoreBucket.Arn}/*
              - Action:
                  - 'codebuild:StartBuild'
                  - 'codebuild:StartBuildBatch'
                  - 'codebuild:BatchGetBuilds'
                  - 'codebuild:BatchGetBuildBatches'
                Effect: Allow
                Resource:
                  - !GetAtt CodeBuildWarmupProject.Arn
              - Action:
                  - 'ssm:getParameter'
                  - 'ssm:getParameters'
                Effect: Allow
                Resource: '*'

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
      Path: /
      Policies:
        - PolicyName: CodeBuildLogs
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource:
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*'
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*:*'
        - PolicyName: BucketPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                  - 's3:PutObject'
                  - 's3:DeleteObject'
                  - 's3:ListBucket'
                Resource:
                  - !Sub 'arn:aws:s3:::${ArtifactStoreBucket}/*'
                  - !Sub 'arn:aws:s3:::${ArtifactStoreBucket}/'
        - PolicyName: secretsPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'ssm:GetParameters'
                  - 'secretsmanager:GetSecretValue'
                Resource: '*'
        - PolicyName: e2eTest
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'cognito-idp:AdminGetUser'
                  - 'cognito-idp:AdminDeleteUser'
                  - 'cognito-idp:AdminSetUserPassword'
                  - 'cognito-idp:AdminInitiateAuth'
                  - 'cognito-idp:AdminCreateUser'
                  - 'cognito-idp:ListUsers'
                Resource:
                  - '*'
              - Effect: Allow
                Action:
                  - 'sts:AssumeRole'
                Resource:
                  - 'arn:aws:iam::884807050265:role/e2e-testing-CodeBuildServiceRole-YJMJ03VHJ0CB'
              - Effect: Allow
                Action:
                  - 'ssm:getParameter'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'secretsmanager:GetSecretValue'
                  - 'secretsmanager:GetResourcePolicy'
                  - 'secretsmanager:DescribeSecret'
                  - 'secretsmanager:ListSecretVersionIds'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'codebuild:StartBuild'
                  - 'codebuild:StartBuildBatch'
                  - 'codebuild:BatchGetBuildBatches'
                  - 'codebuild:StopBuild'
                  - 'codebuild:RetryBuild'
                Resource: '*'

  TestrunnerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              AWS: !GetAtt CodeBuildServiceRole.Arn
      Path: /
      Policies:
        - PolicyName: CodeBuildCognito
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'cognito-idp:AdminGetUser'
                  - 'cognito-idp:AdminDeleteUser'
                  - 'cognito-idp:AdminSetUserPassword'
                  - 'cognito-idp:AdminInitiateAuth'
                  - 'cognito-idp:AdminCreateUser'
                  - 'cognito-idp:ListUsers'
                Resource: '*'

  ArtifactStoreBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled
